/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.beans.Leitor;
import model.dao.LeitorDao;

/**
 *
 * @author Otacilio
 */
public class LeitorView extends javax.swing.JFrame {

    /**
     * Creates new form LeitorView
     */
    public LeitorView() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) jT_leitor.getModel();
        jT_leitor.setRowSorter(new TableRowSorter(modelo));
        readJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_rg = new javax.swing.JTextField();
        txt_nome = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        jL_rg = new javax.swing.JLabel();
        jL_nome = new javax.swing.JLabel();
        jL_email = new javax.swing.JLabel();
        jb_cadastrar = new javax.swing.JButton();
        jb_alterar = new javax.swing.JButton();
        jb_deletar = new javax.swing.JButton();
        jb_consultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_leitor = new javax.swing.JTable();
        jb_reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jL_rg.setText("RG");

        jL_nome.setText("NOME");

        jL_email.setText("EMAIL");

        jb_cadastrar.setText("CADASTRAR");
        jb_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cadastrarActionPerformed(evt);
            }
        });

        jb_alterar.setText("ALTERAR");
        jb_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_alterarActionPerformed(evt);
            }
        });

        jb_deletar.setText("DELETAR");
        jb_deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_deletarActionPerformed(evt);
            }
        });

        jb_consultar.setText("CONSULTAR");
        jb_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_consultarActionPerformed(evt);
            }
        });

        jT_leitor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RG", "NOME", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jT_leitor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jT_leitorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jT_leitor);

        jb_reset.setText("RESET");
        jb_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jb_cadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_alterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_deletar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_consultar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jL_rg)
                            .addComponent(jL_email))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_rg, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jL_nome)
                                .addGap(4, 4, 4)
                                .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_email)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_reset))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_rg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_rg)
                    .addComponent(jL_nome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_email))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_cadastrar)
                    .addComponent(jb_alterar)
                    .addComponent(jb_deletar)
                    .addComponent(jb_consultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jb_reset)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cadastrarActionPerformed
        if (!(txt_rg.getText().isBlank()) && !(txt_nome.getText().isBlank())) {
            dao.create(new Leitor(
                    Integer.parseInt(txt_rg.getText()),
                    txt_nome.getText(),
                    txt_email.getText())
            );
            readJTable();
            txt_rg.setText("");
            txt_nome.setText("");
            txt_email.setText("");
        }
    }//GEN-LAST:event_jb_cadastrarActionPerformed

    private void jb_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_alterarActionPerformed
        if (jT_leitor.getSelectedRow() != -1) {
            dao.update(new Leitor(
                    Integer.parseInt(txt_rg.getText()),
                    txt_nome.getText(),
                    txt_email.getText()),
                     Integer.parseInt(jT_leitor.getValueAt(jT_leitor.getSelectedRow(), 0).toString()));
            readJTable();
            txt_rg.setText("");
            txt_nome.setText("");
            txt_email.setText("");
        }
    }//GEN-LAST:event_jb_alterarActionPerformed

    private void jT_leitorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jT_leitorMouseClicked
        if (jT_leitor.getSelectedRow() != -1) {
            txt_rg.setText(jT_leitor.getValueAt(jT_leitor.getSelectedRow(), 0).toString());
            txt_nome.setText(jT_leitor.getValueAt(jT_leitor.getSelectedRow(), 1).toString());
            txt_email.setText(jT_leitor.getValueAt(jT_leitor.getSelectedRow(), 2).toString());

        }
    }//GEN-LAST:event_jT_leitorMouseClicked

    private void jb_deletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_deletarActionPerformed
        if (jT_leitor.getSelectedRow() != -1) {
            dao.delete(new Leitor(
                    Integer.parseInt(txt_rg.getText()),
                    txt_nome.getText(),
                    txt_email.getText())
            );
            readJTable();
            txt_rg.setText("");
            txt_nome.setText("");
            txt_email.setText("");
        }
    }//GEN-LAST:event_jb_deletarActionPerformed

    private void jb_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_consultarActionPerformed
        if (!txt_rg.getText().isBlank())
            readJTableFor(Integer.parseInt(txt_rg.getText()));
    }//GEN-LAST:event_jb_consultarActionPerformed

    private void jb_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_resetActionPerformed
        readJTable();
        txt_rg.setText("");
        txt_nome.setText("");
        txt_email.setText("");
    }//GEN-LAST:event_jb_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    LeitorDao dao = new LeitorDao();

    public void readJTable() {
        DefaultTableModel modelo = (DefaultTableModel) jT_leitor.getModel();
        modelo.setNumRows(0);

        for (Leitor l : dao.read()) {
            modelo.addRow(new Object[]{
                l.getRg(),
                l.getNome(),
                l.getEmail()
            });
        }

    }

    public void readJTableFor(int rg) {
        DefaultTableModel modelo = (DefaultTableModel) jT_leitor.getModel();
        modelo.setNumRows(0);

        for (Leitor l : dao.readFor(rg)) {
            modelo.addRow(new Object[]{
                l.getRg(),
                l.getNome(),
                l.getEmail()
            });
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LeitorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LeitorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LeitorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LeitorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeitorView().setVisible(true);
            }
        });
    }
    // <editor-fold defaultstate="collapsed" desc="Variables declaration">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jL_email;
    private javax.swing.JLabel jL_nome;
    private javax.swing.JLabel jL_rg;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jT_leitor;
    private javax.swing.JButton jb_alterar;
    private javax.swing.JButton jb_cadastrar;
    private javax.swing.JButton jb_consultar;
    private javax.swing.JButton jb_deletar;
    private javax.swing.JButton jb_reset;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txt_rg;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}
